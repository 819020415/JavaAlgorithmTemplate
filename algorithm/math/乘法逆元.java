package algorithm.math;

public class 乘法逆元 {
    /**
     * 同余式
     * 如果两正数 a,b 模 m 的余数相同，则称 a,b 模 m 同余
     * 记为 a ≡ b (mod m) eg : 8 ≡ 2 (mod 3)
     *
     * 乘法逆元
     * 若 a,b 互质，且满足同余方程 ax ≡ 1 (mod b),
     * 则称 x 为 a 模 b 的乘法逆元，记作 a ^ -1
     * eg : 8 * x ≡ 1 (mod 5), x = 2,7,12....
     *
     * 费马小定理
     * 若 p 为质数，且 a,p 互质，则 a ^ (p - 1) ≡ 1 (mod p)
     * eg : 4 ^ (3 - 1) ≡ 1 (mod 3)
     * 一个变形：(a/b) mod p=(a*b^(p-2)) mod p
     * 可用于求组合数，把除法运算转化为乘法运算，保证不丢失精度
     *
     */
    /**
     * 解决问题：给定 a,p,求 a 模 p 的乘法逆元
     * 由费马小定理 ： a ^ (p - 1) ≡ 1 (mod p) -> a * a ^ (p - 2) ≡ 1 （mod p)
     * 所以 a ^ (p - 2) 就是 a 模 p 的乘法逆元,用快速幂求解即可
     *
     */
}

