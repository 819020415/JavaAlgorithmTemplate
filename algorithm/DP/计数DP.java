package algorithm.DP;

/**
 * 1.划分数：有 n 个无区别的物品，将它们分成不超过 m 个组，求方案数 % mod
 * (1 2 1 和 1 1 2 属于同一种方案）
 * 限制： 1 <= m <= n <= 1000
 * 这样的划分称作 n 的 m 划分
 * 令 dp[i][j] = j 的 i 划分的方案数（将 j 个物品分为 i 组的方案数）
 * 递推式为：dp[i][j] = dp[i][j - i] + dp[i - 1][j]
 * （将基数 n 划分为恰好 k 个非空集合的方案的数目称为第二类 Stiring 数；
 * 将基数 n 划分为任意个非空集合的方案的数目称为 Bell 数；）
 * <p>
 * 2.多重集组合数：有 n 种物品，每种有 a[i] 个，不同物品可以区分，同种物品无法区分，
 * 求选择 m 种物品的方案数 % mod
 * 限制：1 <= n,m,a[i] <= 1000
 * 令 dp[i][j] = 从前 i 种物品中取出 j 个物品的方案数
 * 递推式为：dp[i + 1][j] = dp[i + 1][j - 1] + dp[i][j] - dp[i][j - 1 - a[i]]
 */
public class 计数DP {
}
